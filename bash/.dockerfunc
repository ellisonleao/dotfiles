#!/bin/bash

DOCKER_REPO_PREFIX=ellisonleao

# helpers
dcleanup() {
    local containers
    mapfile -t containers < <(docker ps -aq 2>/dev/null)
    docker rm "${containers[@]}" 2>/dev/null
    local volumes
    mapfile -t volumes < <(docker ps --filter status=exited -q 2>/dev/null)
    docker rm -v "${volumes[@]}" 2>/dev/null
    local images
    mapfile -t images < <(docker images --filter dangling=true -q 2>/dev/null)
    docker rmi "${images[@]}" 2>/dev/null
}

del_stopped() {
    local name=$1
    local state
    state=$(docker inspect --format "{{.State.Running}}" "$name" 2>/dev/null)

    if [[ "$state" == "false" ]]; then
        docker rm "$name"
    fi
}

rmctr() {
    # shellcheck disable=SC2068
    docker rm -f $@ 2>/dev/null || true
}

relies_on() {
    for container in "$@"; do
        local state
        state=$(docker inspect --format "{{.State.Running}}" "$container" 2>/dev/null)

        if [[ "$state" == "false" ]] || [[ "$state" == "" ]]; then
            echo "$container is not running, starting it for you."
            $container
        fi
    done
}

##################
# MAIN FUNCTIONS #
##################

# CLI

http() {
    docker run -t --rm \
        --name=http \
        --log-driver none \
        ${DOCKER_REPO_PREFIX}/httpie "$@"
}

speedtest-cli() {
    docker run -t --rm \
        --name=speedtest-cli \
        --log-driver none \
        ${DOCKER_REPO_PREFIX}/speedtest-cli "$@"
}

ctop() {
    docker run --rm -ti \
        --name=ctop \
        -v /var/run/docker.sock:/var/run/docker.sock:ro \
        quay.io/vektorlab/ctop:latest
}

howdoi() {
    docker run --rm -t --name=howdoi ${DOCKER_REPO_PREFIX}/howdoi "$@"
}

wrk() {
    docker run --rm -t --name=wrk ${DOCKER_REPO_PREFIX}/wrk "$@"
}

nmap() {
    # add --net=host if docker is not user namespaced
    docker run --rm -t --name=nmap ${DOCKER_REPO_PREFIX}/nmap "$@"
}

hey() {
    docker run --rm -t --name=hey ${DOCKER_REPO_PREFIX}/hey "$@"
}


htop() {
    docker run --rm -ti \
        -v /var/run/docker.sock:/var/run/docker.sock:ro \
        --pid host \
        --name=htop ${DOCKER_REPO_PREFIX}/htop
}

function kafkacat() {
    docker run --rm -it --network=host edenhill/kafkacat:1.5.0 "$@"
}

# GUI

gimp() {
    # xhost local:docker
    del_stopped gimp

    docker run -d \
        -v /etc/localtime:/etc/localtime:ro \
        -v /tmp/.X11-unix:/tmp/.X11-unix \
        -e "DISPLAY=unix${DISPLAY}" \
        -v "${HOME}/Pictures:/root/Pictures" \
        --name gimp \
        ${DOCKER_REPO_PREFIX}/gimp
}
